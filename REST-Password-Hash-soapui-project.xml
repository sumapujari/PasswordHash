<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="6fc5b2e5-cd6f-4b33-ad64-dc133639a428" activeEnvironment="Default" name="REST Password-Hash Load Test" resourceRoot="" soapui-version="5.6.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.TestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Environment" value="Default"/>
  <con:entry key="Global Properties" value=""/>
  <con:entry key="TestSuite" value="PASSWORD SVC HASH"/>
  <con:entry key="Password" value=""/>
  <con:entry key="TestRunner Path" value=""/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="Ignore Errors" value="false"/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="user-settings.xml Password" value=""/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="Save Project" value="false"/>
  <con:entry key="Enable UI" value="false"/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Coverage Report" value="false"/>
  <con:entry key="Export JUnit Results" value="false"/>
  <con:entry key="Export JUnit Results with test properties" value="false"/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="Export All" value="false"/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="Report Format(s)" value=""/>
  <con:entry key="TestCase" value="Workflow Test"/>
  <con:entry key="Print Report" value="false"/>
  <con:entry key="Username" value=""/>
  <con:entry key="Root Folder" value=""/>
  <con:entry key="Select Report Type" value=""/>
  <con:entry key="Save After" value="true"/>
  <con:entry key="Add Settings" value="false"/>
  <con:entry key="Endpoint" value=""/>
</xml-fragment>]]></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.LoadTestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Print Report Statistics" value="true"/>
  <con:entry key="Report Format(s)" value=""/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="Save After" value="false"/>
  <con:entry key="Add Settings" value="false"/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="TestSuite" value="&lt;all>"/>
  <con:entry key="Endpoint" value=""/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Report to Generate" value=""/>
  <con:entry key="Password" value=""/>
  <con:entry key="LoadTest" value="&lt;all>"/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Global Properties" value=""/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="ThreadCount" value=""/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="TestCase" value="&lt;all>"/>
  <con:entry key="Username" value=""/>
  <con:entry key="user-settings.xml Password" value=""/>
  <con:entry key="TestRunner Path" value="C:\Program Files\SmartBear\SoapUI-5.6.0/bin"/>
  <con:entry key="Environment" value="Default"/>
  <con:entry key="Limit" value=""/>
  <con:entry key="Root Folder" value="C:\Suma\PasswordHash\Report"/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="Save Project" value="false"/>
</xml-fragment>]]></con:setting></con:settings><con:interface xsi:type="con:RestService" id="79de372b-059a-49b1-8333-2dd0659099a9" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://localhost:8088" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://localhost:8088</con:endpoint></con:endpoints><con:resource name="Hash-LoadTest" path="/hash" id="fa3ef74e-0f5c-481e-9566-cfe87f00a9d4"><con:settings/><con:parameters/><con:method name="GET STATS" id="cc871dd1-6b2e-4aec-9cb0-6cbe4fb92182" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/plain; charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>text/plain; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="4cc87e93-7c87-4834-97ff-3813c1672f0a" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Accepts" value="application/json"/>
  &lt;con:entry key="Content-Type" value="application/json"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>http://localhost:8088</con:endpoint><con:request>{
	"password": "abc"
}
</con:request><con:originalUri>http://localhost/hash/1</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="SHUTDOWN" id="2fd47053-1a10-4508-a403-54c2a4a301c1" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/plain; charset=utf-8</con:mediaType><con:status>404 400</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>text/plain; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="bcac3c2e-b6e0-443a-ba65-4af0b5efcf8b" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:8088</con:endpoint><con:request>shutdown</con:request><con:originalUri>http://localhost/shutdown</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:testSuite id="37b8a6e8-464a-4c1a-9065-d2caa7fe23c6" name="http://127.0.0.1:8088:TestSuit_LoadTest"><con:description>TestSuite generated for REST Service [http://localhost:8088]</con:description><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="de0f5edc-50c4-4c4e-8d4c-d636d3bb8e3a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Load TestCase" searchProperties="true"><con:description>TestCase generated for REST Resource [] located at [/hash]</con:description><con:settings/><con:testStep type="groovy" name="All 3 APIs Script" id="3ead9f42-3869-4a04-a015-efa5ba66e46a"><con:settings/><con:config><script>// POST
def post = new URL("http://localhost:8088/hash").openConnection();
def message = '{"password":"abcd"}'
post.setRequestMethod("POST")
post.setDoOutput(true)
post.setRequestProperty("Content-Type", "application/json")
post.getOutputStream().write(message.getBytes("UTF-8"));
def postRC = post.getResponseCode();
def postResponseValue = 0
assert postRC.equals(200)
if(postRC.equals(200)) {
	postResponseValue = post.getInputStream().getText()
    log.info(postResponseValue);
}

// GET
def get = new URL("http://localhost:8088/hash/"+postResponseValue).openConnection();
def getRC = get.getResponseCode();
assert getRC.equals(200)
if(getRC.equals(200)) {
    log.info(get.getInputStream().getText());
}

// GET STATS
get = new URL("http://localhost:8088/stats").openConnection();
getRC = get.getResponseCode();
assert getRC.equals(200)
if(getRC.equals(200)) {
    log.info(get.getInputStream().getText());
}

</script></con:config></con:testStep><con:loadTest id="49d0a4e9-8027-4a42-bfcc-d016bcf0fecc" name="LoadTest"><con:settings><con:setting id="HttpSettings@close-connections">false</con:setting></con:settings><con:threadCount>200</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>2000</con:testLimit><con:limitType>COUNT</con:limitType><con:loadStrategy><con:type>Burst</con:type><con:config><burstDelay>7000</burstDelay><burstDuration>7000</burstDuration></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="1f8ab947-9fc2-4354-91b0-8966a6e38457" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Shutdown TestCase" searchProperties="true"><con:settings/><con:testStep type="groovy" name="EndToEnd_Test" id="9db422bf-8a95-4768-a1e1-599a7240ae83"><con:settings/><con:config><script>// POST
def post = new URL("http://localhost:8088/hash").openConnection();
def message = '{"password":"abcd"}'
post.setRequestMethod("POST")
post.setDoOutput(true)
post.setRequestProperty("Content-Type", "application/json")
post.getOutputStream().write(message.getBytes("UTF-8"));
def postRC = post.getResponseCode();
def postResponseValue = 0
assert postRC.equals(200)
if(postRC.equals(200)) {
	postResponseValue = post.getInputStream().getText()
    log.info(postResponseValue);
}

// GET
def get = new URL("http://localhost:8088/hash/"+postResponseValue).openConnection();
def getRC = get.getResponseCode();
assert getRC.equals(200)
if(getRC.equals(200)) {
    log.info(get.getInputStream().getText());
}

// SHUTDOWN
post = new URL("http://localhost:8088/hash").openConnection();
message = 'shutdown'
post.setRequestMethod("POST")
post.setDoOutput(true)
post.setRequestProperty("Content-Type", "application/json")
post.getOutputStream().write(message.getBytes("UTF-8"));
postRC = post.getResponseCode();
postResponseValue = 0

assert postRC.equals(200)
if(postRC.equals(200)) {
	postResponseValue = post.getInputStream().getText()
    log.info(postResponseValue);
}


// GET STATS
try
{
get = new URL("http://localhost:8088/stats").openConnection();
}catch(Exception e)
{
    assert true
}

</script></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:properties/><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>